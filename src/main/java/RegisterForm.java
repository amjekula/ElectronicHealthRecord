import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import static login_register_design.MyCNX.getConnection;

/**
 *
 * @author A. Mjeks
 */
public class RegisterForm extends javax.swing.JFrame {

    /**
     * Creates new form RegisterForm
     */
    public RegisterForm() {
        initComponents();

        fillRegisterTable(patientTable, "");

        for (int x = 0; x < idList.size(); x++) {
            if (idList.get(x) != null) {
                userId = (String) idList.get(x);
                fillWaitingTable(userId);
            }
        }

        this.setLocationRelativeTo(null);

        //set outer border
        Border globalBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLUE);
        jPanel1.setBorder(globalBorder);

        //Set border to the panel
        Border titleBorder = BorderFactory.createMatteBorder(0, 1, 1, 1, new Color(153, 0, 153));
        jPanel7.setBorder(titleBorder);

        //Set border to the text field for register tab
        Border txtFieldBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, new Color(153, 0, 153));
        nameTxt.setBorder(txtFieldBorder);
        surnameTxt.setBorder(txtFieldBorder);
        idTxt.setBorder(txtFieldBorder);
        addressArea.setBorder(txtFieldBorder);
        postTxt.setBorder(txtFieldBorder);
        contTxt.setBorder(txtFieldBorder);
        emailTxt.setBorder(txtFieldBorder);
        enterPassw.setBorder(txtFieldBorder);
        confPassw.setBorder(txtFieldBorder);
        nameTxt2.setBorder(txtFieldBorder);
        surnameTxt2.setBorder(txtFieldBorder);
        relationTxt.setBorder(txtFieldBorder);
        contTxt2.setBorder(txtFieldBorder);
        jDateChooser.setBorder(txtFieldBorder);

        //Set border to the text field for patient lis tab
        searchIdLabel.setBorder(txtFieldBorder);
        search.setBorder(txtFieldBorder);

        //group buttons
        ButtonGroup btng = new ButtonGroup();
        btng.add(maleRBtn);
        btng.add(femaleRBtn);

        //border to close and minimaze tab
        Border labelBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        closeLabel.setBorder(labelBorder);
        minimazeLabel.setBorder(labelBorder);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        idTxt = new javax.swing.JTextField();
        surnameTxt = new javax.swing.JTextField();
        emailTxt = new javax.swing.JTextField();
        contTxt = new javax.swing.JTextField();
        maritalCBox = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        postTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressArea = new javax.swing.JTextArea();
        maleRBtn = new javax.swing.JRadioButton();
        femaleRBtn = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        enterPassw = new javax.swing.JPasswordField();
        confPassw = new javax.swing.JPasswordField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        nameTxt2 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        surnameTxt2 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        relationTxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        contTxt2 = new javax.swing.JTextField();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        loginScreenTxt = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchLabel1 = new javax.swing.JLabel();
        searchIdLabel = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        search = new javax.swing.JLabel();
        searchLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitingPatientTable = new javax.swing.JTable();
        signOutBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        closeLabel = new javax.swing.JLabel();
        minimazeLabel = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(153, 0, 153));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        jTabbedPane1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N

        jPanel3.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jPanel3.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        saveBtn.setBackground(new java.awt.Color(255, 102, 0));
        saveBtn.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setText("Save");
        saveBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
        saveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                saveBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                saveBtnMouseExited(evt);
            }
        });
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        clearBtn.setBackground(new java.awt.Color(255, 102, 0));
        clearBtn.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("Clear");
        clearBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
        clearBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearBtnMouseExited(evt);
            }
        });
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 153));
        jLabel7.setText("Patient Details");
        jLabel7.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel5.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jPanel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Name:");
        jLabel2.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("Surname:");
        jLabel3.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel4.setText("Date of birth (dd/mm/yyyy):");
        jLabel4.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel5.setText("Gender:");
        jLabel5.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel6.setText("I.D No:");
        jLabel6.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel8.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel8.setText("Address:");
        jLabel8.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel9.setText("Email:");
        jLabel9.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel10.setText("Contact No:");
        jLabel10.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel12.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel12.setText("Marital Status:");
        jLabel12.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        nameTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        nameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTxtActionPerformed(evt);
            }
        });

        idTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        idTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idTxtKeyTyped(evt);
            }
        });

        surnameTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        emailTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        emailTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailTxtActionPerformed(evt);
            }
        });

        contTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        contTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contTxtKeyTyped(evt);
            }
        });

        maritalCBox.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        maritalCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Single", "Married", "Widow" }));
        maritalCBox.setCursor(new Cursor(Cursor.HAND_CURSOR));
        maritalCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maritalCBoxActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel13.setText("Postal Code:");
        jLabel13.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        postTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        postTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                postTxtKeyTyped(evt);
            }
        });

        addressArea.setColumns(20);
        addressArea.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        addressArea.setLineWrap(true);
        addressArea.setRows(1);
        addressArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(addressArea);

        maleRBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        maleRBtn.setSelected(true);
        maleRBtn.setText("Male");
        maleRBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));

        femaleRBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        femaleRBtn.setText("Female");
        femaleRBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));

        jLabel11.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel11.setText("Password:");
        jLabel11.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel14.setText("Confirm Password:");
        jLabel14.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel15.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(153, 0, 153));
        jLabel15.setText("Next of Kin Details");
        jLabel15.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        nameTxt2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel16.setText("Name:");
        jLabel16.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel17.setText("Surname:");
        jLabel17.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        surnameTxt2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel18.setText("Relationship:");
        jLabel18.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        relationTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel19.setText("Contact No:");
        jLabel19.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        contTxt2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        contTxt2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contTxt2KeyTyped(evt);
            }
        });

        jDateChooser.setDateFormatString("d MMM, yyyy");
        jDateChooser.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator2)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(179, 179, 179)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(surnameTxt)
                                                        .addComponent(nameTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(maleRBtn)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(femaleRBtn))))
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(confPassw, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(179, 179, 179)
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(maritalCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(idTxt)
                                                                        .addComponent(contTxt)
                                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(jLabel13)
                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                                .addComponent(postTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(emailTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(enterPassw, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(177, 177, 177)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(surnameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(nameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(relationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(contTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(53, 238, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(surnameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(maleRBtn)
                                                .addComponent(femaleRBtn)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(85, 85, 85)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(maritalCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(idTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(postTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(contTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(enterPassw, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(confPassw, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(39, 39, 39)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(nameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(surnameTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(relationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(contTxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(58, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel5);

        loginScreenTxt.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        loginScreenTxt.setText("Already Have a Health Record? Login!");
        loginScreenTxt.setToolTipText("click here to login");
        loginScreenTxt.setCursor(new Cursor(Cursor.HAND_CURSOR));
        loginScreenTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginScreenTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginScreenTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginScreenTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1029, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(clearBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(loginScreenTxt)
                                .addGap(216, 216, 216)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(loginScreenTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("     Register     ", jPanel3);

        jPanel4.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        jPanel4.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N

        searchLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        searchLabel.setForeground(new java.awt.Color(153, 0, 153));
        searchLabel.setText("Search Patient");
        searchLabel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        searchLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        searchLabel1.setText("ID Number:");
        searchLabel1.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        searchIdLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        searchIdLabel.setToolTipText("search health record via id number here");
        searchIdLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchIdLabelActionPerformed(evt);
            }
        });
        searchIdLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchIdLabelKeyTyped(evt);
            }
        });

        patientTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Name", "Surname", "Gender", "Marital Status", "DOB", "I.D Num", "Address", "Postal Code", "Phone no", "Email", "NoK Name", "NoK Phone"
                }
        ) {
            boolean[] canEdit = new boolean [] {
                    false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        patientTable.setCursor(new Cursor(Cursor.HAND_CURSOR));
        patientTable.setEnabled(false);
        patientTable.setFocusTraversalPolicyProvider(true);
        patientTable.setInheritsPopupMenu(true);
        patientTable.setRowHeight(20);
        jScrollPane3.setViewportView(patientTable);

        search.setIcon(new ImageIcon("searchIcon.png")); // NOI18N
        search.setToolTipText("click here to search");
        search.setCursor(new Cursor(Cursor.HAND_CURSOR));
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });

        searchLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        searchLabel2.setForeground(new java.awt.Color(153, 0, 153));
        searchLabel2.setText("Waiting Patients");
        searchLabel2.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

        waitingPatientTable.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        waitingPatientTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Name", "Surname", "Gender", "Age", "I.D Number", "Arrived Time"
                }
        ));
        waitingPatientTable.setRowHeight(20);
        waitingPatientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                waitingPatientTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(waitingPatientTable);

        signOutBtn.setBackground(new java.awt.Color(255, 102, 0));
        signOutBtn.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        signOutBtn.setForeground(new java.awt.Color(255, 255, 255));
        signOutBtn.setText("Sign Patient Out");
        signOutBtn.setToolTipText("select patient & click here to sign a patient out");
        signOutBtn.setCursor(new Cursor(Cursor.HAND_CURSOR));
        signOutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signOutBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signOutBtnMouseExited(evt);
            }
        });
        signOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator3)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(searchLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                                        .addComponent(searchLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(214, 214, 214)
                                                .addComponent(searchIdLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                                                .addGap(0, 0, 0)
                                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(searchLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(139, 139, 139))
                        .addComponent(jScrollPane3)
                        .addComponent(jScrollPane4)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(470, 470, 470)
                                .addComponent(signOutBtn)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(searchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(searchIdLabel)
                                        .addComponent(searchLabel1))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(signOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27))
        );

        jTabbedPane1.addTab("     Patient List     ", jPanel4);

        jPanel7.setBackground(new java.awt.Color(255, 153, 0));
        jPanel7.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reception");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jLabel1)
                                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                                .addContainerGap())
        );

        closeLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        closeLabel.setText(" X ");
        closeLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                closeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeLabelMouseExited(evt);
            }
        });

        minimazeLabel.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        minimazeLabel.setText(" - ");
        minimazeLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
        minimazeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimazeLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minimazeLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minimazeLabelMouseExited(evt);
            }
        });

        logo.setBackground(new java.awt.Color(255, 255, 255));
        logo.setCursor(new Cursor(Cursor.HAND_CURSOR));
        logo.setOpaque(true);
        logo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(350, 350, 350)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(minimazeLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closeLabel)
                                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(closeLabel)
                                                .addComponent(minimazeLabel))
                                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        //set icon to the jlabel
        logo.setIcon(new ImageIcon("logo.jpg"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTabbedPane1))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void minimazeLabelMouseExited(java.awt.event.MouseEvent evt) {
        Border labelBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        minimazeLabel.setBorder(labelBorder);
        minimazeLabel.setForeground(Color.black);
    }

    private void minimazeLabelMouseEntered(java.awt.event.MouseEvent evt) {
        Border labelBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.MAGENTA);
        minimazeLabel.setBorder(labelBorder);
        minimazeLabel.setForeground(Color.red);
    }

    private void minimazeLabelMouseClicked(java.awt.event.MouseEvent evt) {
        this.setState(JFrame.ICONIFIED);
    }

    private void closeLabelMouseExited(java.awt.event.MouseEvent evt) {
        //close color when not clicked
        Border labelBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        closeLabel.setBorder(labelBorder);
        closeLabel.setForeground(Color.black);
    }

    private void closeLabelMouseEntered(java.awt.event.MouseEvent evt) {
        //close colour when clicked
        Border labelBorder = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.MAGENTA);
        closeLabel.setBorder(labelBorder);
        closeLabel.setForeground(Color.red);
    }

    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {
        System.exit(0);
    }

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // Save patient details
        String name = nameTxt.getText();
        String sname = surnameTxt.getText();
        String gender = "Male";
        if (femaleRBtn.isSelected()) {
            gender = "Female";
        }

        String maritalStats = "Single";
        if (maritalCBox.getSelectedItem().equals("Married")) {
            maritalStats = "Married";

        } else if (maritalCBox.getSelectedItem().equals("Widow")) {
            maritalStats = "Widow";

        }

        SimpleDateFormat datef = new SimpleDateFormat("dd-MM-yyyy");
        String dob = "";
        if (jDateChooser.getDate() == null) {

        } else {
            dob = datef.format(jDateChooser.getDate());
        }

        String idNum = idTxt.getText();
        String address = addressArea.getText();
        String postNum = postTxt.getText();
        String pcontact = contTxt.getText();
        String email = emailTxt.getText();
        String password = String.valueOf(enterPassw.getPassword());
        String confPassword = String.valueOf(confPassw.getPassword());

        String kinName = nameTxt2.getText();
        String kinSName = surnameTxt2.getText();
        String kinRel = relationTxt.getText();
        String kinContact = contTxt2.getText();

        if (verifyFields()) {
            if (!checkIDNum(idNum)) {

                PreparedStatement prepState;
                ResultSet resSet;
                String registerUserQuery = "INSERT INTO `patient`(`name`, `surname`, `gender`, "
                        + "`marital_status`, `date_of_birth`, `id_number`, `address`, `postal_code`, "
                        + "`contact_number`, `email`, `password`, `confirm_password`, `kin_name`, `kin_surname`, "
                        + "`relationship`, `kin_contact_number`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";

                try {

                    prepState = MyCNX.getConnection().prepareStatement(registerUserQuery);
                    prepState.setString(1, name);
                    prepState.setString(2, sname);
                    prepState.setString(3, gender);
                    prepState.setString(4, maritalStats);
                    prepState.setString(5, dob);
                    prepState.setString(6, idNum);
                    prepState.setString(7, address);
                    prepState.setString(8, postNum);
                    prepState.setString(9, pcontact);
                    prepState.setString(10, email);
                    prepState.setString(11, password);
                    prepState.setString(12, confPassword);
                    prepState.setString(13, kinName);
                    prepState.setString(14, kinSName);
                    prepState.setString(15, kinRel);
                    prepState.setString(16, kinContact);

                    if (prepState.executeUpdate() != 0) {
                        JOptionPane.showMessageDialog(null, "Patient account created!", "Notification", 2);
                        nameTxt.setText("");
                        surnameTxt.setText("");
                        idTxt.setText("");
                        addressArea.setText("");
                        postTxt.setText("");
                        contTxt.setText("");
                        emailTxt.setText("");
                        enterPassw.setText("");
                        confPassw.setText("");
                        nameTxt2.setText("");
                        surnameTxt2.setText("");
                        relationTxt.setText("");
                        contTxt2.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error: Check your information", "Notification", 2);
                    }
                } catch (SQLException ex) {
                    System.out.println("SQLException: " + ex.getMessage());
                }
            }
        }
    }

    private void saveBtnMouseExited(java.awt.event.MouseEvent evt) {
        //set jButton background
        saveBtn.setBackground(new Color(255, 102, 0));
    }

    private void saveBtnMouseEntered(java.awt.event.MouseEvent evt) {
        //set jButton background
        saveBtn.setBackground(new Color(255, 153, 0));
    }

    private void clearBtnMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        clearBtn.setBackground(new Color(255, 153, 0));
    }

    private void clearBtnMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        clearBtn.setBackground(new Color(255, 102, 0));
    }

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // clear text fields
        nameTxt.setText("");
        surnameTxt.setText("");
        idTxt.setText("");
        addressArea.setText("");
        postTxt.setText("");
        contTxt.setText("");
        emailTxt.setText("");
        enterPassw.setText("");
        confPassw.setText("");
        nameTxt2.setText("");
        surnameTxt2.setText("");
        relationTxt.setText("");
        contTxt2.setText("");
    }

    private void emailTxtActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void maritalCBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void idTxtKeyTyped(java.awt.event.KeyEvent evt) {
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }

    private void contTxt2KeyTyped(java.awt.event.KeyEvent evt) {
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }

    private void contTxtKeyTyped(java.awt.event.KeyEvent evt) {
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }

    private void postTxtKeyTyped(java.awt.event.KeyEvent evt) {
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
    }

    private void loginScreenTxtMouseEntered(java.awt.event.MouseEvent evt) {
        //change text color to purple when mouse is on text
        loginScreenTxt.setForeground(new Color(153, 0, 153));

        //UnderLine text when hovered
        Border underline = BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(153, 0, 153));
        loginScreenTxt.setBorder(underline);
    }

    private void loginScreenTxtMouseExited(java.awt.event.MouseEvent evt) {
        //change text color to black when mouse is on text
        loginScreenTxt.setForeground(Color.BLACK);
        loginScreenTxt.setBorder(null);
    }

    private void loginScreenTxtMouseClicked(java.awt.event.MouseEvent evt) {
        Login_Form logForm = new Login_Form();
        logForm.setVisible(true);
        logForm.pack();
        logForm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }

    private void searchIdLabelActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void nameTxtActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {
        // Show searched item when search is clicked
        patientTable.setModel(new DefaultTableModel(null, new Object[]{"Name",
                "Surname", "Gender", "Marital Status", "DOB", "I.D Num", "Address",
                "Postal Code", "Phone no", "Email", "NoK Name", "Nok Contact"}));
        fillRegisterTable(patientTable, searchIdLabel.getText());
    }

    private void signOutBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String query = "DELETE FROM `loggedpatient` WHERE `id_number` = " + idTxt.getText();
        queryExe(query, "Signed Out");
        idTxt.setText("");
    }

    private void searchIdLabelKeyTyped(java.awt.event.KeyEvent evt) {
        //Only allow numbers
        if (!Character.isDigit(evt.getKeyChar())) {
            evt.consume();
        }
        patientTable.setModel(new DefaultTableModel(null, new Object[]{"Name",
                "Surname", "Gender", "Marital Status", "DOB", "I.D Num", "Address",
                "Postal Code", "Phone no", "Email", "NoK Name", "Nok Contact"}));
        fillRegisterTable(patientTable, searchIdLabel.getText());
    }

    private void waitingPatientTableMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        int rowNum = waitingPatientTable.getSelectedRow();
        TableModel model = waitingPatientTable.getModel();
        idTxt.setText(model.getValueAt(rowNum, 4).toString());
    }

    private void logoMouseClicked(java.awt.event.MouseEvent evt) {
        Login_Form logForm = new Login_Form();
        logForm.setVisible(true);
        logForm.pack();
        logForm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }

    private void signOutBtnMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        signOutBtn.setBackground(new Color(255, 153, 0));
    }

    private void signOutBtnMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        signOutBtn.setBackground(new Color(255, 102, 0));
    }

    //============================================Start Logged patients prompts================================================
    public void queryExe(String query, String msg) {
        Statement state;
        Connection con = MyCNX.getConnection();

        try {
            state = con.createStatement();

            if (state.executeUpdate(query) == 1) {
                DefaultTableModel model = (DefaultTableModel) waitingPatientTable.getModel();
                model.setRowCount(0);

                String userId;
                for (int x = 0; x < idList.size(); x++) {
                    if (idList.get(x) != null) {
                        userId = (String) idList.get(x);
                        fillWaitingTable(userId);
                    }
                }

                JOptionPane.showMessageDialog(null, "Patient " + msg + "!", "Have a Nice Day", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Patient Not " + msg, "Select Patient", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        }
    }

    //getting time
    public String clock() {
        Calendar cal = new GregorianCalendar();

        int sec = cal.get(Calendar.SECOND);
        int min = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);

        String time = hour + " : " + min + " : " + sec;
        return time;
    }

    //check if user has already logged in
    public static boolean checkLogged(String userID) {
        PreparedStatement prepState;
        ResultSet resSet;
        boolean userIDExist = false;

        String query = "SELECT * FROM `loggedpatient` WHERE `id_number` = ?";
        try {

            prepState = MyCNX.getConnection().prepareStatement(query);
            prepState.setString(1, userID);
            resSet = prepState.executeQuery();

            if (resSet.next()) {
                userIDExist = true;
                JOptionPane.showMessageDialog(null, "This patient is already logged", "User ID Failed", 2);
            }

        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        }
        return userIDExist;
    }//end of check if user has logged in

    //Inserting to database a logged user
    public void loggedUser(String id) {
        Connection connect = MyCNX.getConnection();
        PreparedStatement prepState;
        ResultSet resSet;

        String query = "SELECT * FROM `patient` WHERE `id_number` = ?";

        try {

            prepState = connect.prepareStatement(query);
            prepState.setString(1, id);

            resSet = prepState.executeQuery();

            while (resSet.next()) {
                String name = resSet.getString(2);
                String surname = resSet.getString(3);
                String gender = resSet.getString(4);

                //change date
                SimpleDateFormat datef = new SimpleDateFormat("dd-mm-yyyy");
                String dob = String.valueOf(resSet.getString(6));
                Date userDate = datef.parse(dob);

                //Calculate age
                long seconds = System.currentTimeMillis() - userDate.getTime();
                long age = (long) ((long) seconds / (1000.0 * 60 * 60 * 24 * 365));
                String currentAge = String.valueOf(age);

                String idNum = resSet.getString(7);

                if (!checkLogged(idNum)) {
                    JOptionPane.showMessageDialog(null, "Login Successful!");
                    String loggedUserQuery = "INSERT INTO `loggedpatient`(`name`, "
                            + "`surname`, `gender`, `age`, `id_number`, `arrive_time`)"
                            + " VALUES (?,?,?,?,?,?)";

                    prepState = MyCNX.getConnection().prepareStatement(loggedUserQuery);
                    prepState.setString(1, name);
                    prepState.setString(2, surname);
                    prepState.setString(3, gender);
                    prepState.setString(4, currentAge);
                    prepState.setString(5, idNum);
                    prepState.setString(6, clock());
                    prepState.executeUpdate();

                }

            }

        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        } catch (ParseException ex) {
            System.out.println("ParseException: " + ex.getMessage());
        }
    }

    //Waiting Patients fill table
    public static void fillWaitingTable(String id) {

        Connection connect = MyCNX.getConnection();
        PreparedStatement prepState;

        try {

            prepState = connect.prepareStatement("SELECT * FROM `loggedpatient` WHERE `id_number` = ?");
            prepState.setString(1, id);

            ResultSet resSet = prepState.executeQuery();
            DefaultTableModel tableModel = (DefaultTableModel) waitingPatientTable.getModel();

            Object row[];
            while (resSet.next()) {
                row = new Object[6];

                //add rows from the database to the table
                row[0] = resSet.getString(2);
                row[1] = resSet.getString(3);
                row[2] = resSet.getString(4);
                row[3] = resSet.getString(5);
                row[4] = resSet.getString(6);
                row[5] = resSet.getString(7);

                tableModel.addRow(row);

            }

        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        }
    }//end of waiting patient fill table

    //===============================================end Logged patients prompts==================================================
//================================================Registered Patients prompts=================================================
    public boolean verifyFields() {
        String name = nameTxt.getText();
        String sname = surnameTxt.getText();
        String idNum = idTxt.getText();
        String address = addressArea.getText();
        String postNum = postTxt.getText();
        String pcontact = contTxt.getText();
        String password = String.valueOf(enterPassw.getPassword());
        String confPassword = String.valueOf(confPassw.getPassword());

        String kinName = nameTxt2.getText();
        String kinSName = surnameTxt2.getText();
        String kinContact = contTxt2.getText();

        //Check if important field is empty
        if (name.trim().equals("") || sname.trim().equals("") || jDateChooser.getDate() == null
                || idNum.trim().equals("") || address.trim().equals("") || postNum.trim().equals("")
                || pcontact.trim().equals("") || password.trim().equals("") || confPassword.trim().equals("")
                || kinName.trim().equals("") || kinSName.trim().equals("") || kinContact.trim().equals("")) {

            JOptionPane.showMessageDialog(null, "One or more of the necessary fields is empty", "Empty Fields", 2);
            return false;

            //Check if passwords match
        } else if (!password.equals(confPassword)) {
            JOptionPane.showMessageDialog(null, "Passwords don't match", "Confirm Password", 2);
            return false;

        } else {
            //if everything is OK
            return true;
        }
    }

    //Check if ID number exist
    public boolean checkIDNum(String userID) {
        PreparedStatement prepState;
        ResultSet resSet;
        boolean userIDExist = false;

        String query = "SELECT * FROM `patient` WHERE `id_number` = ?";

        try {
            prepState = MyCNX.getConnection().prepareStatement(query);
            prepState.setString(1, userID);
            resSet = prepState.executeQuery();

            if (resSet.next()) {
                userIDExist = true;
                JOptionPane.showMessageDialog(null, "This patient is already registered", "User ID Failed", 2);
            }
        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        }
        return userIDExist;
    }

    //filling the registered patients table
    public void fillRegisterTable(JTable table, String searchValue) {

        Connection connect = MyCNX.getConnection();
        PreparedStatement prepState;

        try {
            prepState = connect.prepareStatement("SELECT * FROM `patient` WHERE CONCAT(`id_number`) LIKE ?");
            prepState.setString(1, "%" + searchValue + "%");

            ResultSet resSet = prepState.executeQuery();
            DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

            Object row[];
            while (resSet.next()) {
                row = new Object[12];

                //add rows from the database to the table
                row[0] = resSet.getString(2);
                row[1] = resSet.getString(3);
                row[2] = resSet.getString(4);
                row[3] = resSet.getString(5);
                row[4] = resSet.getString(6);
                row[5] = resSet.getString(7);
                row[6] = resSet.getString(8);
                row[7] = resSet.getString(9);
                row[8] = resSet.getString(10);
                row[9] = resSet.getString(11);
                row[10] = resSet.getString(14);
                row[11] = resSet.getString(17);

                tableModel.addRow(row);
                idList.add(row[5]);
            }

        } catch (SQLException ex) {
            System.out.println("SQLException: " + ex.getMessage());
        }
    }

    //=========================================end registered patients prompts===============================================
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new RegisterForm().setVisible(true);
            }
        });

    }

    //    MedicalRecord medRec = new MedicalRecord();
    ArrayList idList = new ArrayList();
    String userId;
    // Variables declaration - do not modify
    private javax.swing.JTextArea addressArea;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JPasswordField confPassw;
    private javax.swing.JTextField contTxt;
    private javax.swing.JTextField contTxt2;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JPasswordField enterPassw;
    private javax.swing.JRadioButton femaleRBtn;
    private javax.swing.JTextField idTxt;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel loginScreenTxt;
    private javax.swing.JLabel logo;
    private javax.swing.JRadioButton maleRBtn;
    private javax.swing.JComboBox<String> maritalCBox;
    private javax.swing.JLabel minimazeLabel;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JTextField nameTxt2;
    private javax.swing.JTable patientTable;
    private javax.swing.JTextField postTxt;
    private javax.swing.JTextField relationTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel search;
    private javax.swing.JTextField searchIdLabel;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel searchLabel1;
    private javax.swing.JLabel searchLabel2;
    private javax.swing.JButton signOutBtn;
    private javax.swing.JTextField surnameTxt;
    private javax.swing.JTextField surnameTxt2;
    public static javax.swing.JTable waitingPatientTable;
    // End of variables declaration
}
